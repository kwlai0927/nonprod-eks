name: Deploy ECR Image to EKS

on:
  repository_dispatch:
    types:
    - deploy-chart

  workflow_dispatch:
    inputs:
      chart-namespace:
        required: false
        type: string
        description: The chart namespace if use
      chart-name:
        required: true
        type: string
        description: The chart name

      version:
        required: true
        type: string
        description: The chart version
      deploy-namespace:
        required: true
        type: string
        description: The kubernetes namespace to deploy
permissions:
  id-token: write # This is required for aws-actions/configure-aws-credentials@v4
  contents: write  # This is required for actions/checkout

jobs:
  
  deploy:
    name: Deploy Helm to Kubernetes
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.deploy-namespace }}

    steps:
    - name: Show Client_Payload
      id: params
      run: |
        echo "chart-namespace=${{ inputs.chart-namespace && inputs.chart-namespace || github.event.client_payload.chart-namespace }}" >> $GITHUB_OUTPUT
        echo "chart-name=${{ inputs.chart-name && inputs.chart-name || github.event.client_payload.chart-name }}" >> $GITHUB_OUTPUT
        echo "version=${{ inputs.version && inputs.version || github.event.client_payload.version }}" >> $GITHUB_OUTPUT
        echo "deploy-namespace=${{ inputs.deploy-namespace && inputs.deploy-namespace || github.event.client_payload.deploy-namespace }}" >> $GITHUB_OUTPUT
        echo "registry=418295696814.dkr.ecr.ap-southeast-1.amazonaws.com" >> $GITHUB_OUTPUT
        echo "region=ap-southeast-1" >> $GITHUB_OUTPUT
        echo "domain=towardthestars.live" >> $GITHUB_OUTPUT
        echo "cluster-name=nonprod-eks" >> $GITHUB_OUTPUT
    - name: 01. Checkout
      uses: actions/checkout@v4

    - name: 02. Configure AWS credentials
      id: credential
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # role-to-assume: ${{ secrets.AWS_NONPROD_DEPLOY_ROLE_ARN }}
        aws-region: ap-southeast-1

    - name: 03. install Helm CLI
      uses: azure/setup-helm@v4.2.0
      id: install

    - name: 04. Helm Login to Amazon ECR
      id: login-ecr
      run: aws ecr get-login-password --region ${{ steps.params.outputs.region }} | helm registry login --username AWS --password-stdin ${{ steps.params.outputs.registry }}

    - name: 05. Install kubectl
      uses: azure/setup-kubectl@v4.0.0

    - name: 06. Update kubeconfig
      run: aws eks update-kubeconfig --name ${{ steps.params.outputs.cluster-name }}

    - name: 07. Deploy helm chart to EKS
      working-directory: ${{ steps.params.outputs.deploy-namespace }}/${{ steps.params.outputs.chart-name }}
      run: |
        if [ -n "${{ steps.params.outputs.chart-namespace }}" ]; then
          REGISTRY=${{ steps.params.outputs.registry }}/${{ steps.params.outputs.chart-namespace }}
        else
          REGISTRY=${{ steps.params.outputs.registry }}
        fi
        helm upgrade -i -f values.yaml -n ${{ steps.params.outputs.deploy-namespace }} \
        --create-namespace \
        --set registry=$REGISTRY \
        --set version=${{ steps.params.outputs.version }} \
        --set domain=${{ steps.params.outputs.domain }} \
        ${{ steps.params.outputs.chart-name }} oci://${REGISTRY}/${{ steps.params.outputs.chart-name }}:${{ steps.params.outputs.version }}
